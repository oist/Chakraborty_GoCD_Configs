# Simple constants
via_plugin_version = "0.2.2.3"

# Names defined in the Zip_PPL_Builder config file
zipPipelineName = "Zip_PPL_Builder"
zipPipelineStageName = "Zip"
zipPipelineJobName = "Zip"

builderMaterial = {
  "pipeline": zipPipelineName,
  "stage": zipPipelineStageName,
  "ignore_for_scheduling": True
}

# -- Configuration for the NIPKG Fetch Artifact step -- #
# DownloadOrInstall
# --
# SuppressIncompatibilityErrors
# AllowUpgrade (default on)
# AllowDowngrade
# AllowUninstallation
# InstallRecommended
# InstallRootDir (only applies to packages with "Plugin: relative-file" attribute)
# --
# DownloadDestDir
# DownloadIncludeDeps
# DownloadSkipDependenciesCheck
fetch_ppl_configuration = { "options": {
  "DownloadOrInstall": "Install",
  "SuppressIncompatibilityErrors": False,
  "AllowUpgrade": True,
  "AllowDowngrade": True,
  "AllowUninstallation": False,
  "InstallRecommended": False,
  "InstallRootDir": None
}}

# ------------------- Jobs ---------------------------- #
dir_job = {
  "tasks": [
    {"exec": {
      "command": "dir",
      "arguments": [ "*" ]
    }}
  ]
}

via_job = {
  "environment_variables": {
      "PROJECT_TITLE": "#{PPL_Name}"
  },
  "timeout": 3,
  "tabs": {
    "VIA_Results": "#{PPL_Name}/viaResultsCheckstyle.xml",
    "VIA_Report": "#{PPL_Name}/CheckstyleReport.html"
  },
  "artifacts": [
    # Checkstyle xml generated by LabVIEW code
    {"build": {
        "source": "#{GIT_DIR}/viaResultsCheckstyle.xml",
        "destination": "#{PPL_Name}"
      }
    },
    # Report generated by plugin - the main tab for this job
    {"build": {
        "source": "CheckstyleReport.html",
        "destination": "#{PPL_Name}"
      }
    },
    # The raw VIA results (could remove)
    {"build": {
        "source": "#{GIT_DIR}/viaResults.xml",
        "destination": "#{PPL_Name}"
      }
    }
  ],
  "tasks": [
    { "exec": {
        "run_if": "passed",
        "command": "g-cli",
        "working_directory": "#{GIT_DIR}",
        "arguments": [
          "--verbose",
          "--lv-ver",
          "#{LV_VERSION}",
          "viaRunner.vi",
          "--",
          "viaResults.xml"
        ]
    }},
    {"plugin": {
        "configuration": {
          "id": "Checkstyle.LabVIEW.VIA",
          "version": via_plugin_version
        },
        "run_if": "passed",
        "options": {
          "SourceVIAFile": "#{GIT_DIR}/viaResults.xml",
          "SourceCheckstyleFile": "#{GIT_DIR}/viaResultsCheckstyle.xml",
          "DestinationFile": "CheckstyleReport.html",
          "AddEmpty": False
        }
    }}
  ]
}

# ------------------- Tasks --------------------------- #
create_ppl_dir = {
  "exec": {
    "run_if": "passed",
    "command": "powershell",
    "arguments": [
      "-Command",
      "New-Item",
      "-Force",
      "-ItemType",
      "Directory",
      "-Path",
      "\\\"C:\\LabVIEW Sources\\PPLs\\\""
    ]
  }
}

ls_task = { "exec": {
  "run_if": "passed",
  "command": "ls",
  "arguments": [ "*" ]
}}

# Note that adding a '*' to the end here causes an error
# This seems to be due to the execution via Invoke-Expression and the $RUN_CMD variable in the elastic agent.
ls_currentDir_task = { "exec": {
  "run_if": "passed",
  "command": "ls",
  "arguments": [ "PPLs\\\\Current" ]
}}

fetch_builder_task = { "fetch" : {
  "run_if": "passed",
  "pipeline": zipPipelineName,
  "stage": zipPipelineStageName,
  "job": zipPipelineJobName,
  "source": "PPL_Builder/PPL_Builder.zip",
  "destination": ".",
  "is_file": "yes"
}}

expand_builder_task = { "exec": {
  "run_if": "passed",
  "command": "powershell",
  "arguments": [
    "-Command",
    "Expand-Archive",
    "-Path",
    "PPL_Builder.zip",
    "-DestinationPath",
    "."
  ]
}}

gcli_build_task = { "exec": {
  "run_if": "passed",
  "command": "g-cli",
  "arguments": [
    "--lv-ver",
    "#{LV_VERSION}",
    '%BITNESS_FLAG%',
    "PPL_Builder\\Call_Builder_Wiresmith.vi", # This must be a backward slash
    "--",
    "#{PPL_LIB_PATH}",
    "PPLs/Current",
    "%IS_DEBUG_BUILD%",
    "%TARGET_SYSTEM%",
    "%BUILD_TYPE%",
    "#{Dependency_PPL_Names}"
  ]
}}